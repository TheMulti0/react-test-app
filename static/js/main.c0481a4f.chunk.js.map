{"version":3,"sources":["serviceWorker.ts","components/Home.tsx","components/Second.tsx","navigation/MenuItem.tsx","navigation/NavigationBar.tsx","navigation/Component.tsx","navigation/ComponentRoute.tsx","components/Third.tsx","navigation/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Home","Typography","Second","useStyles","makeStyles","theme","root","display","flexWrap","image","height","width","zIndex","backgroundColor","palette","action","hover","imageButton","textDecoration","position","left","right","top","bottom","alignItems","justifyContent","background","default","transition","transitions","create","duration","imageButtonSelected","selected","imageTitle","color","text","primary","imageMarked","opacity","borderRadius","imageClicked","MenuItem","props","classes","mapping","otherItemSelected","React","useState","isSelected","setIsSelected","subscribe","value","className","ButtonBase","focusRipple","onClick","event","to","path","component","variant","name","NavigationBar","mappings","oppositeThemeType","toggleDarkMode","subjects","Map","map","Subject","original","undefined","get","delete","forEach","next","set","AppBar","Toolbar","IconButton","Component","ComponentRoute","exact","render","renderProps","Third","App","defaultRoute","routes","state","themeOptions","type","main","createMuiTheme","this","CssBaseline","bind","toggleThemeOptions","Object","setState","getToggledThemeOptions","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0481a4f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Typography>\r\n      Home!\r\n    </Typography>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function Second() {\r\n  return (\r\n    <Typography>\r\n      Second\r\n    </Typography>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { IRouteMappingProps } from \"../models/IRouteMappingProps\";\r\nimport { ButtonBase, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Home } from \"@material-ui/icons\";\r\nimport { Observable } from \"rxjs\";\r\n\r\ninterface Props extends IRouteMappingProps {\r\n  otherItemSelected: Observable<any>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  image: {\r\n    // height: '36px',\r\n    height: '64px',\r\n    width: 100,\r\n    // marginRight: '1rem !important',\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageButton': {\r\n        backgroundColor: theme.palette.action.hover\r\n      },\r\n      // '& $imageMarked': {\r\n      //   opacity: 1,\r\n      // },\r\n      // '& $imageTitle': {\r\n      //   border: '4px solid currentColor',\r\n      // },\r\n    }\r\n  },\r\n  imageButton: {\r\n    // borderRadius: '4px',\r\n    textDecoration: 'none',\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.palette.background.default,\r\n    transition: theme.transitions.create('background-color', {duration:250})\r\n  },\r\n  imageButtonSelected: {\r\n    // borderRadius: '4px',\r\n    textDecoration: 'none',\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.palette.action.selected,\r\n    transition: theme.transitions.create('background-color', {duration:250})\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    color: theme.palette.text.primary\r\n  },\r\n  imageMarked: {\r\n    height: '10%',\r\n    width: '0%',\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.text.primary,\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: -1,\r\n    borderRadius: '4px',\r\n    transition: theme.transitions.create(['opacity', 'width'], {duration:250})\r\n  },\r\n  imageClicked: {\r\n    height: '10%',\r\n    width: '100%',\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.text.primary,\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: -1,\r\n    borderRadius: '4px',\r\n    transition: theme.transitions.create(['opacity', 'width'], {duration:250})\r\n  }\r\n}));\r\n\r\nexport default function MenuItem(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  const { mapping, otherItemSelected } = props;\r\n\r\n  const [isSelected, setIsSelected] = React.useState(() => false);\r\n  props.otherItemSelected.subscribe(value => setIsSelected(false));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonBase\r\n        focusRipple\r\n        className={classes.image}\r\n        onClick={event => setIsSelected(true)}>\r\n        <Link className={isSelected ? classes.imageButtonSelected : classes.imageButton}\r\n              to={mapping.path}>\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"subtitle1\"\r\n            color=\"inherit\"\r\n            className={classes.imageTitle}>\r\n\r\n            { mapping.name }\r\n\r\n            <span className={isSelected ? classes.imageClicked : classes.imageMarked}/>\r\n\r\n          </Typography>\r\n        </Link>\r\n      </ButtonBase>\r\n    </div>\r\n  );\r\n}\r\n","import './NavigationBar.css';\r\nimport React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IRouteMapping } from \"../models/IRouteMapping\";\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport MenuItem from \"./MenuItem\";\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Home } from \"@material-ui/icons\";\r\n\r\ninterface Props {\r\n  mappings: IRouteMapping[];\r\n  oppositeThemeType: () => \"light\" | \"dark\";\r\n  toggleDarkMode: () => void;\r\n}\r\n\r\nexport default function NavigationBar(props: Props) {\r\n\r\n  const { mappings, oppositeThemeType, toggleDarkMode } = props;\r\n\r\n  let subjects: Map<IRouteMapping, Subject<any>> = new Map(\r\n    mappings.map(value => [value, new Subject<any>()] as [IRouteMapping, Subject<any>]));\r\n\r\n  function onClick(mapping?: IRouteMapping) {\r\n    let original: Subject<any> | undefined = undefined;\r\n\r\n    if (mapping !== undefined) {\r\n      original = subjects.get(mapping) as Subject<any>;\r\n\r\n      subjects.delete(mapping);\r\n    }\r\n\r\n    subjects.forEach(value => value.next(null));\r\n\r\n    if (mapping !== undefined && original !== undefined) {\r\n      subjects.set(mapping, original)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar variant=\"regular\">\r\n\r\n          <Link to='/' onClick={event => onClick()}>\r\n            <Home color=\"primary\" />\r\n          </Link>\r\n\r\n          <div className=\"grow\" />\r\n\r\n          {\r\n            mappings\r\n              .map(\r\n                mapping => {\r\n                  return (\r\n                    <div onClick={event => onClick(mapping)}>\r\n                      <MenuItem mapping={mapping}\r\n                                otherItemSelected={subjects.get(mapping) as Observable<any>} />\r\n                    </div>\r\n\r\n                   );\r\n\r\n\r\n                })\r\n          }\r\n\r\n          <div className=\"grow\" />\r\n\r\n          <IconButton onClick={ event => toggleDarkMode() }>\r\n            {\r\n              oppositeThemeType() === \"light\"\r\n                ? <BrightnessHighIcon />\r\n                : <Brightness4Icon />\r\n            }\r\n          </IconButton>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n\r\n}\r\n","import './Component.css';\r\nimport React from \"react\";\r\nimport { IRouteMappingProps } from \"../models/IRouteMappingProps\";\r\n\r\nexport default function Component(props: IRouteMappingProps) {\r\n  const { mapping } = props;\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <mapping.component\r\n        mappings={mapping.mappings}\r\n        {...props} />\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport Component from \"./Component\";\r\nimport { IRouteMappingProps } from \"../models/IRouteMappingProps\";\r\n\r\nexport default function ComponentRoute(props: IRouteMappingProps) {\r\n  const { mapping } = props;\r\n  return (\r\n    <Route\r\n      exact\r\n      path={ mapping.path }\r\n      render={ renderProps => <Component mapping={mapping} {...renderProps} /> } />\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function Third() {\r\n  return (\r\n    <Typography>\r\n      Third\r\n    </Typography>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Home from \"../components/Home\";\r\nimport Second from \"../components/Second\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ComponentRoute from \"./ComponentRoute\";\r\nimport Component from \"./Component\";\r\nimport { IRouteMapping } from \"../models/IRouteMapping\";\r\nimport { createMuiTheme, CssBaseline, MuiThemeProvider, Theme, ThemeOptions } from \"@material-ui/core\";\r\nimport { PaletteOptions } from \"@material-ui/core/styles/createPalette\";\r\nimport Third from \"../components/Third\";\r\n\r\ninterface State {\r\n  themeOptions: ThemeOptions;\r\n}\r\n\r\nexport default class App extends React.Component<any, State> {\r\n\r\n  defaultRoute: IRouteMapping =\r\n  {\r\n    name: 'Home',\r\n    path: '/',\r\n    component: Home\r\n  };\r\n\r\n  routes: IRouteMapping[] =\r\n  [\r\n    {\r\n      name: 'Second',\r\n      path: '/second',\r\n      component: Second\r\n    },\r\n    {\r\n      name: 'Third',\r\n      path: '/third',\r\n      component: Third\r\n    }\r\n  ];\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    const themeOptions: ThemeOptions = {\r\n      palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n          main: \"#0f9dfc\"\r\n        }\r\n      }\r\n    };\r\n\r\n    this.state = {\r\n      themeOptions: themeOptions\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const theme: Theme = createMuiTheme(this.state.themeOptions);\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <BrowserRouter>\r\n\r\n          <NavigationBar mappings={this.routes}\r\n                         oppositeThemeType={this.oppositeThemeType.bind(this)}\r\n                         toggleDarkMode={this.toggleThemeOptions.bind(this)} />\r\n\r\n          <Switch>\r\n            <div>\r\n              <Route\r\n                exact\r\n                path={this.defaultRoute.path}\r\n                render={renderProps => <Component mapping={this.defaultRoute} {...renderProps} /> } />\r\n\r\n              {\r\n                this.routes.map(mapping => <ComponentRoute mapping={mapping} />)\r\n              }\r\n            </div>\r\n          </Switch>\r\n\r\n        </BrowserRouter>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  oppositeThemeType(): \"light\" | \"dark\" {\r\n    return this.state.themeOptions.palette?.type === \"light\" ? \"dark\" : \"light\";\r\n  }\r\n\r\n  getToggledThemeOptions(): ThemeOptions {\r\n    const themeOptions: ThemeOptions = Object.create(this.state.themeOptions);\r\n\r\n    (themeOptions.palette as PaletteOptions).type = this.oppositeThemeType();\r\n\r\n    return themeOptions;\r\n  }\r\n\r\n  toggleThemeOptions() {\r\n    this.setState({\r\n      themeOptions: this.getToggledThemeOptions()\r\n    });\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./navigation/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}